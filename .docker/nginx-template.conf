server {
    listen       ${PASS_UI_PORT} default_server;
    server_name  _;

    #charset utf-8;
    #access_log  /var/log/nginx/host.access.log  main;

    # Add Content Security Policy
    add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-eval'; font-src 'self' http://fonts.gstatic.com https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap; connect-src 'self' 'nonce-abcdefg' 'zing' 'unsafe-inline' http://code.jquery.com/jquery-1.11.1.min.js https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.js http://code.cloudcms.com/alpaca/1.5.24/bootstrap/alpaca.min.js https://cdn.jsdelivr.net/npm/sweetalert2@7.26.10/dist/sweetalert2.all.min.js; script-src-elem 'self' 'nonce-abcdefg' 'unsafe-inline' http://code.jquery.com/jquery-1.11.1.min.js https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.js http://code.cloudcms.com/alpaca/1.5.24/bootstrap/alpaca.min.js https://cdn.jsdelivr.net/npm/sweetalert2@7.26.10/dist/sweetalert2.all.min.js; img-src 'self' https: data:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap;" always;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # This is important, any 404 will cause the ember
    # app to re-load.  This is because all ember URLs
    # (e.g. https://pass/grants/foo), when issued as an HTTP
    # request, have nothing that 'serves' them.  Instead, the
    # ember app, when loaded, inspects the URL and renders the
    # correct page client-side.  So we want the ember app to load
    # and parse all these 404 URLs.
    #
    # Note, the equals sign means that a 200 is returned
    # instead of a 404
    error_page 404 = ${PASS_UI_ROOT_URL}/index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
